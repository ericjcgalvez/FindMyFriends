% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/grouping.R
\docType{methods}
\name{graphGrouping}
\alias{graphGrouping}
\alias{graphGrouping,pgVirtual-method}
\title{Use igraph to create gene grouping from a similarity matrix}
\usage{
graphGrouping(object, ...)

\S4method{graphGrouping}{pgVirtual}(object, similarity, algorithm, ...)
}
\arguments{
\item{object}{A pgVirtual subclass}

\item{...}{parameters to be passed on to the community detection algorithm}

\item{similarity}{A similarity matrix with rows and columns corresponding to
the genes in the pangenome.}

\item{algorithm}{A string naming the algorithm. See 
\code{\link[igraph]{communities}}
for an overview. The trailing '.community' can be omitted from the name. 
Default is 'infomap', which is also the recommended.}
}
\value{
An object of the same class as 'object'.
}
\description{
This method takes a similarity matrix based on all genes in the pangenome,
converts it to a graph representation and uses one of igraphs community 
detection algorithms to split all genes into groups. Within the FindMyFriends
framework the similarity matrix would usually come from 
\code{\link{kmerSimilarity}}, but it can just as well be defined in other 
ways e.g. be blast derived.
}
\section{Methods (by class)}{
\itemize{
\item \code{pgVirtual}: graph grouping for all pgVirtual subclasses
}}
\examples{
testPG <- .loadPgExample()

# Generate similarity matrix
simMat <- kmerSimilarity(testPG, lowerLimit=0.75)

# Group genes
testPG <- graphGrouping(testPG, simMat)

}
\seealso{
Other grouping algorithms: \code{\link{cdhitGrouping}},
  \code{\link{gpcGrouping}}, \code{\link{manualGrouping}}
}

