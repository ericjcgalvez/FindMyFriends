% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/pgVirtual.R
\docType{class}
\name{pgVirtual-class}
\alias{as}
\alias{length,pgVirtual-method}
\alias{pgVirtual-class}
\alias{show,pgVirtual-method}
\title{Base class for pangenomic data}
\usage{
\S4method{length}{pgVirtual}(x)

\S4method{show}{pgVirtual}(object)

as(object, Class='ExpressionSet')

as(object, Class='matrix')
}
\arguments{
\item{x}{A pgVirtual subclass object}

\item{object}{A pgVirtual subclass object}

\item{Class}{The class to coerce pgVirtual subclasses to. Outside of the
FindMyFriends class tree only 'ExpressionSet' and 'matrix' is implemented.}
}
\description{
This virtual class is the superclass of all other pangenome classes in
FindMyFriends. It is an empty shell that is mainly used for dispatch and
checking that the promises of subclasses are held.
}
\details{
Subclasses of pgVirtual must implement the following methods in order for
them to plug into FindMyFriends algorithms:

\describe{
 \item{seqToOrg(object)}{Returns the mapping from genes to organisms as an
 integer vector with position mapped to gene and integer mapped to organism.}
 \item{seqToGeneGroup(object)}{As seqToOrg but mapped to gene group instead
 of organism. If gene groups are yet to be defined return an empty vector.}
 \item{genes(object, split, subset)}{Return the underlying sequences. If
 split is missing return an XStringSet, otherwise return an XStringSetList.
 split can be either 'group', 'organism' or 'paralogue' and should group the
 sequences accordingly. Subset should behave as if it was added as '[]' to
 the results but allow you to avoid reading everything into memory if not
 needed.}
 \item{geneNames(object)}{Return a character vector with the name of each
 gene.}
 \item{geneNames<-(object, value)}{Set the name of each gene.}
 \item{geneWidth(object)}{Return an integer vector with the length (in
 residues) of each gene.}
 \item{removeGene(object, name, organism, group, ind)}{\strong{Should only be
 implemented for signature: c(\emph{yourClass}, 'missing', 'missing',
 'missing', 'integer')} Remove the genes at the given indexes and return the
 object.}
 \item{orgNames(object)}{Return a character vector of organism names.}
 \item{orgNames<-(object, value)}{Set the name of the organisms.}
 \item{groupNames(object)}{Return a character vector of gene group names.}
 \item{groupNames<-(object, value)}{Set the name of gene groups.}
 \item{orgInfo(object)}{Return a data.frame with metadata about each
 organim.}
 \item{orgInfo<-(object, value)}{Set a data.frame to be metadata about each
 organism.}
 \item{setOrgInfo(object, name, info, key)}{Set the metadata 'name', for the
 organisms corresponding to 'key' to 'info'}
 \item{groupInfo(object)}{Return a data.frame with metadata about each
 gene group.}
 \item{groupInfo<-(object, value)}{Set a data.frame to be metadata about each
 gene group.}
 \item{setGroupInfo(object, name, info, key)}{Set the metadata 'name', for
 the gene groups corresponding to 'key' to 'info'}
 \item{groupGenes(object, seqToGeneGroup)}{Sets the gene grouping of the
 pangenome. 'seqToGeneGroup' should correspond to the output of the
 seqToGeneGroup method (i.e. an integer vector with each element giving the
 group of the corresponding gene). This method \strong{must} include a
 \code{callNextMethod(object)} as the last line.}
 \item{mergePangenomes(pg1, pg2)}{Merge pg2 into pg1 preserving the indexing
 in pg1 and appending and modifying the indexing of pg2.}
}

Additionally subclasses can override the following methods for performance
gains. Otherwise they will be derived from the above methods.

\describe{
 \item{length(object)}{Return the number of organisms in the object.}
 \item{nOrganisms(object)}{As length.}
 \item{nGenes(object)}{Return the number of genes in the object.}
 \item{nGeneGroups(object)}{Return the number of gene groups}
 \item{hasGeneGroups}{Returns TRUE if gene groups have been defined}
 \item{pgMatrix}{Returns an integer matrix with organisms as columns and gene
 groups as rows and the corresponding number of genes in each element.}
}

Developers are encourages to consult the implementation of FindMyFriends own
classes when trying to implement new ones
}
\section{Methods (by generic)}{
\itemize{
\item \code{length}: Length of a Pangenome, defined as the number of
organisms it contain

\item \code{show}: Basic information about the pangenome
}}
\section{Slots}{

\describe{
\item{\code{.settings}}{A list containing settings pertaining to the object}
}}
\seealso{
Other Pangenome_classes: \code{\link{pgFull-class}};
  \code{\link{pgFullLoc-class}};
  \code{\link{pgInMem-class}};
  \code{\link{pgInMemLoc-class}}; \code{\link{pgLM-class}};
  \code{\link{pgLMLoc-class}};
  \code{\link{pgVirtualLoc-class}}
}

